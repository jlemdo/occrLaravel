name: Deploy to AWS

on:
  push:
    branches:
      - master  # Se ejecuta cuando haces push a master
  workflow_dispatch:  # También permite ejecutar manualmente desde GitHub

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, json, bcmath, pdo, mysql

      - name: 📦 Install Composer dependencies
        run: composer install --no-dev --optimize-autoloader --no-interaction

      - name: 🧪 Run Tests (optional)
        run: |
          # Descomentar cuando tengas tests configurados
          # php artisan test
          echo "Tests skipped for now"

      - name: 🚀 Deploy to AWS Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_SSH_KEY }}
          port: ${{ secrets.AWS_PORT || 22 }}
          script: |
            cd /var/www/html/foodbackend

            # Pull latest code
            echo "📥 Pulling latest code from GitHub..."
            git pull origin master

            # Install/update dependencies
            echo "📦 Installing dependencies..."
            composer install --no-dev --optimize-autoloader --no-interaction

            # Run migrations
            echo "🗄️ Running database migrations..."
            php artisan migrate --force

            # Clear and cache config
            echo "🧹 Clearing caches..."
            php artisan config:clear
            php artisan cache:clear
            php artisan view:clear
            php artisan route:clear

            echo "📝 Optimizing for production..."
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

            # Set proper permissions
            echo "🔒 Setting permissions..."
            sudo chown -R www-data:www-data storage bootstrap/cache
            sudo chmod -R 775 storage bootstrap/cache

            echo "✅ Deployment completed successfully!"

      - name: ✅ Deployment Success
        if: success()
        run: echo "🎉 Deployment to production completed successfully!"

      - name: ❌ Deployment Failed
        if: failure()
        run: echo "💥 Deployment failed. Check the logs above."
